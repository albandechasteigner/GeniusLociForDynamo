{
  "Uuid": "41469f80-bd49-418a-9aba-cf06e3e3178a",
  "IsCustomNode": true,
  "Category": "GeniusLoci.Room",
  "Description": "Reports the elements of the current or linked model that are inside the given room of the current document.",
  "Name": "Room ToElement",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "//Elements of current document or linked model\r\nElement",
      "Id": "e94d13fefdf24ca3978bf5ccc71571da",
      "Inputs": [
        {
          "Id": "ca9eaa72420a45c9a68dc9a27738a928",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Sortie de fonction, utiliser avec les noeuds personnalisés"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Alban de Chasteigner 2021\n#twitter : @geniusloci_bim\n#geniusloci.bim@gmail.com\n#https://github.com/albandechasteigner/GeniusLociForDynamo\n \nimport clr\nclr.AddReference('RevitAPI')\nimport Autodesk\nfrom Autodesk.Revit.DB import *\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\n\nrooms = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]\ninputdoc = UnwrapElement(IN[1])\nresult=[]\n\nif inputdoc is None:\n\tdoc = DocumentManager.Instance.CurrentDBDocument\n\ttransform = Transform.Identity\nelif isinstance (inputdoc, RevitLinkInstance):\n\tdoc = inputdoc.GetLinkDocument()\n\ttransform = inputdoc.GetTotalTransform()\nfor room in rooms:\n\telem=[]\n\tfec = FilteredElementCollector(doc).WhereElementIsNotElementType().WhereElementIsViewIndependent().ToElements().FindAll(lambda x :  type(x.Location) == LocationPoint and x.Category.Id != ElementId(BuiltInCategory.OST_Rooms) or type(x.Location) == LocationCurve or isinstance(x, CeilingAndFloor) or isinstance(x,RoofBase))\n\tfor e in fec:\n\t\tloc = e.Location\n\t\tif type(loc) == LocationPoint:\n\t\t\tpt=loc.Point\n\t\telif type(loc) == LocationCurve:\n\t\t\tpt=loc.Curve.Evaluate(0.5, False)\n\t\t# sketch-based elements (ceiling, floor and roof)\n\t\telif isinstance(e, CeilingAndFloor) or isinstance(e,RoofBase) :\n\t\t\tfor ref in HostObjectUtils.GetTopFaces(e):\n\t\t\t\tgeomFace=e.GetGeometryObjectFromReference(ref)\n\t\t\t\t#Get UV BoundingBox\n\t\t\t\tbbox = geomFace.GetBoundingBox()\n\t\t\t\tuv=(bbox.Min+bbox.Max)/2\n\t\t\t\tpt=geomFace.Evaluate(uv)\n\t\tlocationPoint = transform.OfPoint(pt)\n\t\tif room.IsPointInRoom(locationPoint):\n\t\t\telem.append(e)\n\tresult.append(elem)\n\t\nif isinstance(IN[0], list): OUT = result\nelse: OUT = result[0]",
      "VariableInputPorts": true,
      "Id": "72275071b68c4567919796410543dfd4",
      "Inputs": [
        {
          "Id": "8a8d2b758de341bc9239d24d23564aaf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f4cf38486024c3f984603595d8820e9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f96b2c6186a04f9fbff4be8f456048af",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "room",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Room of current document"
      },
      "Id": "be4dc2845b954d5d9a990bc2d76c790f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9dd75ab84771477193321fce9dccea90",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "RevitLinksInstance",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": "null",
        "Description": "Optional input to retrieve linked elements"
      },
      "Id": "5a451f676b4347328b6394a449899df4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee2aef422ff24e7f85556074fcc63473",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "f96b2c6186a04f9fbff4be8f456048af",
      "End": "ca9eaa72420a45c9a68dc9a27738a928",
      "Id": "df2be8036de14ca1aaffdb5b00ef34e0"
    },
    {
      "Start": "9dd75ab84771477193321fce9dccea90",
      "End": "8a8d2b758de341bc9239d24d23564aaf",
      "Id": "143cd11fca7d4cb98e15c12e5d84ed8c"
    },
    {
      "Start": "ee2aef422ff24e7f85556074fcc63473",
      "End": "2f4cf38486024c3f984603595d8820e9",
      "Id": "d81eaebcdf254e63b1cf9be069527062"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "e94d13fefdf24ca3978bf5ccc71571da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 857.495407829748,
        "Y": 300.211051402016
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "72275071b68c4567919796410543dfd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 660.58230727373,
        "Y": 298.965737278584
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "be4dc2845b954d5d9a990bc2d76c790f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 335.486934387111,
        "Y": 286.814559805006
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "5a451f676b4347328b6394a449899df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 195.053108930184,
        "Y": 374.593725363994
      }
    ],
    "Annotations": [],
    "X": -89.8354173404662,
    "Y": 75.3631967776531,
    "Zoom": 0.627408126597635
  }
}